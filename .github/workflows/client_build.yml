# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Latest Client Build

on:
  push:
    branches:
      - master
      - add_versions
  pull_request:
    branches:
      - master
jobs:
  build:
    strategy:
      matrix:
        value: ["1.17", "1.17.1", "1.18", "1.18.1", "1.18.2", "22w11a", "22w12a", "22w13a", "22w14a"]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Build with Gradle
        id: builder
        uses: gradle/gradle-build-action@937999e9cc2425eddc7fd62d1053baf041147db7
        with:
          arguments: :${{ matrix.value }}:build

      - name: Read Wurst Version from gradle.properties
        id: read_property_wurst
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: './versions/${{ matrix.value }}/gradle.properties'
          property: 'wurst_version'
      - name: Read Minecraft Version from gradle.properties
        id: read_property_mc
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: './versions/${{ matrix.value }}/gradle.properties'
          property: 'minecraft_version'

      - name: Define release_tag
        id: release_tag
        run: echo ::set-output name=tag::v`date +%y%m%d`-${{ steps.read_property_wurst.outputs.value }}-MC${{ steps.read_property_mc.outputs.value }}

      - name: Make Release Zip
        run: |
          zip --junk-paths CheddarBratWurst-Client-${{ steps.release_tag.outputs.tag }}.zip versions/${{ matrix.value }}/build/libs/CheddarBratWurst-Client-${{ steps.release_tag.outputs.tag }}.jar

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release_tag.outputs.tag }}
          release_name: Release ${{ steps.release_tag.outputs.tag }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: CheddarBratWurst-Client-${{ steps.release_tag.outputs.tag }}.zip
          asset_name: CheddarBratWurst-Client-${{ steps.release_tag.outputs.tag }}.zip
          asset_content_type: application/zip